### YamlMime:QSharpType
uid: microsoft.quantum.arrays.partitioned
name: Partitioned
type: function
namespace: microsoft.quantum.arrays
summary: 배열을 여러 부분으로 분할 합니다.
examples: >-
  ```qsharp

  // The following returns [[1, 5], [3], [7]];

  let split = Partitioned([2,1], [1,5,3,7]);

  ```
syntax: "function Partitioned (nElements : Int[], arr : 'T[]) : 'T[][]"
input:
  content: "(nElements : Int[], arr : 'T[])"
  types:
  - name: nElements
    summary: 배열의 각 부분에 있는 요소 수
    isArray: true
    isPrimitive: true
    uid: Int
  - name: arr
    summary: 분할할 입력 배열입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[][]"
  types:
  - summary: 첫 번째 배열이 첫 번째 배열이 `nElements[0]` `arr` 고 두 번째 배열이 그 다음 `nElements[1]` 인 여러 배열 `arr` 마지막 배열은 나머지 모든 요소를 포함 합니다.
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
metadata:
  ms.openlocfilehash: 5f2ac880334b7bd496951765d4ba2a7b9efd699e
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89351886"
