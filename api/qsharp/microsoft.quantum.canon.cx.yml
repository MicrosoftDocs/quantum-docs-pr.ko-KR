### YamlMime:QSharpType
uid: microsoft.quantum.canon.cx
name: CX
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  제어 된 X (CX) 게이트를 한 쌍의 비트에 적용 합니다.


  $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \end{align} , $ $는 퀀텀 개념 가이드에서 행 및 열이로 구성 됩니다.
remarks: >-
  다음에 해당 합니다.


  ```qsharp

  Controlled X([control], target);

  ```


  그리고 다음을 수행 합니다.


  ```qsharp

  CNOT(control, target);

  ```
syntax: 'operation CX (control : Qubit, target : Qubit) : Unit'
input:
  content: '(컨트롤: 고 비트, 대상:의 비트)'
  types:
  - name: control
    summary: CX gate의 비트를 제어 합니다.
    isPrimitive: true
    uid: Qubit
  - name: 대상
    summary: CX gate의 대상입니다.
    isPrimitive: true
    uid: Qubit
output:
  content: 단위
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: 26cbc8dc2f22cdf8583d453b84e53b0151619f5d
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/30/2019
ms.locfileid: "73067869"
