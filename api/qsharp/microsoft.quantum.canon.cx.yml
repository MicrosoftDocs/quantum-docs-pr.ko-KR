### YamlMime:QSharpType
uid: microsoft.quantum.canon.cx
name: CX
type: operation
namespace: microsoft.quantum.canon
summary: >-
  제어 된 X (CX) 게이트를 한 쌍의 비트에 적용 합니다.


  $ $ \begin{align} 1 & 0 & 0 & 0 \\ \\ 0 & 1 & 0 & 0 0 & 0 & 0 & \\ \\ 1 \\ \\ 0 & 0 & 1 & 0 \end{align}, $ $ 여기서 행과 열은 퀀텀 개념 가이드에서와 같이 구성 됩니다.
remarks: >-
  다음에 해당 합니다.


  ```qsharp

  Controlled X([control], target);

  ```


  그리고 다음을 수행 합니다.


  ```qsharp

  CNOT(control, target);

  ```
syntax: 'operation CX (control : Qubit, target : Qubit) : Unit'
input:
  content: '(control : Qubit, target : Qubit)'
  types:
  - name: control
    summary: CX gate의 비트를 제어 합니다.
    isPrimitive: true
    uid: Qubit
  - name: target
    summary: CX gate의 대상입니다.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 29fc8bda0aca9274af89eb7cd9ab9486ee32bba0
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91471833"
