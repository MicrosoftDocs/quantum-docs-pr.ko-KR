### YamlMime:QSharpType
uid: microsoft.quantum.intrinsic.cnot
name: CNOT
type: operation
namespace: microsoft.quantum.intrinsic
summary: >-
  제어 되지 않는 (CNOT) 게이트를 한 쌍의 비트에 적용 합니다.


  \begin{align} \operatorname{CNOT} \mathrel{: =} \begin{bmatrix} 1 & 0 & 0 & 0 \\ \\ 0 & 1 & 0 & 0 0 & 0 & 0 & 1 0 & 0 & \\ \\ \\ \\ 1 & 0 \end{bmatrix}, \end{align}


  여기에서 행과 열은 퀀텀 개념 가이드에서로 정렬 됩니다.
remarks: >-
  다음에 해당 합니다.


  ```qsharp

  Controlled X([control], target);

  ```
syntax: 'operation CNOT (control : Qubit, target : Qubit) : Unit'
input:
  content: '(control : Qubit, target : Qubit)'
  types:
  - name: control
    summary: CNOT gate의 비트를 제어 합니다.
    isPrimitive: true
    uid: Qubit
  - name: target
    summary: CNOT gate의 대상입니다.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 3f65e0bd4373474f24d964fca0314cb14d1e9948
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91490635"
