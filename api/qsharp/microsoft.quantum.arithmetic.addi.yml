### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.addi
name: AddI
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: 는 `ys`의 레지스터 크기에 따라 and를 사용 하거나 사용 하지 않고 추가를 자동으로 선택 합니다.
syntax: 'operation AddI (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: $ 비트 addend를 $n 합니다.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: 최소 $n $ 이상 비트를 사용 하 여 addend를 사용 합니다. 는 결과를 포함 합니다.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: b32c32c9275d5b0132c2e1d5c2de174d74e53432
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73215373"
