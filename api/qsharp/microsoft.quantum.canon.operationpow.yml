### YamlMime:QSharpType
uid: microsoft.quantum.canon.operationpow
name: OperationPow
type: function
namespace: microsoft.quantum.canon
summary: >-
  전원에 대 한 작업을 발생 시킵니다.


  즉, $ $U $를 나타내는 작업이 지정 된 경우 power $m $에 대해 ^ m $ $U 새 작업을 반환 합니다.
syntax: "function OperationPow (op : ('T => Unit), power : Int) : ('T => Unit)"
input:
  content: "(op : ('T => Unit), power : Int)"
  types:
  - name: op
    summary: 반복 될 게이트를 나타내는 연산이 $U입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: power
    summary: $U $가 반복 되는 횟수입니다.
    isPrimitive: true
    uid: Int
output:
  content: ('T => Unit)
  types:
  - summary: ^ M $ $U를 나타내는 새 작업입니다. 여기서 $m = \texttt{power} $입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
typeParameters:
- uid: "'T"
  summary: 켤 작업의 형식입니다.
seeAlso:
- microsoft.quantum.canon.operationpowc
- microsoft.quantum.canon.operationpowa
- microsoft.quantum.canon.operationpowca
metadata:
  ms.openlocfilehash: a2524d8182046d14c6bfc6ce1867f58eba50e9e6
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89355952"
