### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.encodeintofivequbitcode
name: EncodeIntoFiveQubitCode
type: operation
namespace: microsoft.quantum.errorcorrection
summary: ⟦ 5, 1, 3 ⟧ 퀀텀 코드로 인코딩합니다.
syntax: 'operation EncodeIntoFiveQubitCode (physRegister : Qubit[], auxQubits : Qubit[]) : Microsoft.Quantum.ErrorCorrection.LogicalRegister'
input:
  content: '(physRegister : Qubit[], auxQubits : Qubit[])'
  types:
  - name: physRegister
    summary: 인코딩되지 않은 상태를 나타내는의 비트입니다. 이 배열의 `Qubit[]` 길이는 1입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: auxQubits
    summary: 인코딩된 상태를 나타내는 데 사용 되는 보조 비트의 레지스터입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Microsoft.Quantum.ErrorCorrection.LogicalRegister
  types:
  - summary: '`LogicalRegister`인코딩된 상태를 저장 하는 형식의 실제 요소의 배열입니다.'
    uid: microsoft.quantum.errorcorrection.logicalregister
seeAlso:
- logicalregister
metadata:
  ms.openlocfilehash: ca7d2b6420169ca3b5d72527e34a254bb063ac50
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89336484"
