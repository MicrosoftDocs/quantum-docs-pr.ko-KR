### YamlMime:QSharpType
uid: microsoft.quantum.preparation.statepreparationcomplexcoefficients
name: StatePreparationComplexCoefficients
type: function
namespace: Microsoft.Quantum.Preparation
summary: >-
  특정 퀀텀 상태를 준비 하는 작업을 반환 합니다.


  반환 된 작업 $U $는 $n $-stbit compute 기준 상태 $ \ket{0...0} $에서 복합 계수 $r _j t_j} $를 사용 하 여 임의의 퀀텀 상태 $ \ket{\psi} $을 준비 합니다.


  새로 할당 된 레지스터의 U 동작은 $ $ \begin{align} U\ket {0 ... 0} = \ket{\psi} = \frac{\sum_{j = 0} ^ {2 ^ n-1} r_j e ^ {i t_j} \ket{j}}{\sqrt{\sum_{j = 0} ^ {2 ^ n-1} | r_j | ^ 2}}에 의해 제공 됩니다.

  \end{align} $ $
remarks: 음수 입력 계수 $r _j < $0는 값 $ | r_j | $를 사용 하는 긍정으로 처리 됩니다. $2 ^ n $ 보다 작은 경우 `coefficients`은 $ (r_j, t_j) = (0.0, 0.0) $ 요소로 채워집니다.
examples: >-
  다음 코드 조각은 stbit 레지스터 `qubitsLE`에서 퀀텀 상태 $ \ket{\psi} = e ^ {i 0.1} \ sqrt {1/8} \ k{0}+ \ sqrt {7/8} \ k{2}$를 준비 합니다.


  ```qsharp

  let amplitudes = [Sqrt(0.125), 0.0, Sqrt(0.875), 0.0];

  let phases = [0.1, 0.0, 0.0, 0.0];

  mutable complexNumbers = new ComplexPolar[4];

  for (idx in 0..3) {
      set complexNumbers[idx] = ComplexPolar(amplitudes[idx], phases[idx]);
  }

  let op = StatePreparationComplexCoefficients(complexNumbers);

  using (qubits = Qubit[2]) {
      let qubitsLE = LittleEndian(qubits);
      op(qubitsLE);
  }

  ```
syntax: 'function StatePreparationComplexCoefficients (coefficients : Microsoft.Quantum.Math.ComplexPolar[]) : (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)'
input:
  content: '(coefficients : Microsoft.Quantum.Math.ComplexPolar[])'
  types:
  - name: coefficients
    summary: 절대 값으로 표현 되는 $2 ^ n $ 복합 계수와 $ (r_j, t_j) $로 이루어진 배열입니다. $J $ th 계수는 작은 endian 형식으로 인코딩된 number state $ \ket{j} $를 인덱싱합니다.
    isArray: true
    uid: microsoft.quantum.math.complexpolar
output:
  content: (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)
  types:
  - summary: 상태 준비 단일 작업 $U $.
    isOperation: true
    input:
      types:
      - uid: microsoft.quantum.arithmetic.littleendian
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 42049c1ef8c1210bf31a9979a2a6d4d9223a9c85
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73226406"
