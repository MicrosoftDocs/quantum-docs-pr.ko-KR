### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.assertoperationsequalinplacecompbasis
name: AssertOperationsEqualInPlaceCompBasis
type: operation
namespace: microsoft.quantum.diagnostics
summary: >-
  `givenU` `expectedU` 계산 단위의 벡터 에서만 작업의 동작을 확인 하 여 작업이 지정 된 입력 크기에 대 한 작업과 같은지 확인 합니다.

  이는 두 unitaries의 같음에 대 한 필수 조건 이지만 충분 하지 않습니다.
syntax: 'operation AssertOperationsEqualInPlaceCompBasis (nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj)) : Unit'
input:
  content: '(nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: 작업이 수행 하 고 작동 하는 $n $의 수입니다 `givenU` `expectedU` .
    isPrimitive: true
    uid: Int
  - name: givenU
    summary: 검사 될 $ 이상 비트 $n에 대 한 작업입니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: expectedU
    summary: 비교할 $로 비트 $n에 대 한 참조 연산 `givenU` 입니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 07eaebda988a67e8a2c2b9bdd9e7381915d7c0b0
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91483512"
