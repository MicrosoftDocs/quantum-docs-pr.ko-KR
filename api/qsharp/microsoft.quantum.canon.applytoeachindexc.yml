### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeachindexc
name: ApplyToEachIndexC
type: operation
namespace: microsoft.quantum.canon
summary: >-
  레지스터의 인덱싱된 각 요소에 단일 수준 비트 작업을 적용 합니다.

  한정자는 `C` 단일 비트 작업을 제어할 수 있음을 나타냅니다.
syntax: "operation ApplyToEachIndexC (singleElementOperation : ((Int, 'T) => Unit is Ctl), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ((Int, 'T) => Unit is Ctl), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: 각 고 비트에 적용할 연산입니다.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Int
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: register
    summary: 지정 된 작업을 적용할 대상 비트의 배열입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 각 작업의 역할을 하는 대상입니다.
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applytoeachindex
metadata:
  ms.openlocfilehash: c386a8d66baf681b85b6641044012c7a384d92a9
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357649"
