### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytofirsttwoqubitsc
name: ApplyToFirstTwoQubitsC
type: operation
namespace: microsoft.quantum.canon
summary: >-
  레지스터의 처음 두 비트에 작업을 적용 합니다.

  한정자는 `C` 작업을 제어할 수 있음을 나타냅니다.
remarks: >-
  다음 코드와 동일합니다.


  ```qsharp

  op(register[0], register[1]);

  ```
syntax: 'operation ApplyToFirstTwoQubitsC (op : ((Qubit, Qubit) => Unit is Ctl), register : Qubit[]) : Unit'
input:
  content: '(op : ((Qubit, Qubit) => Unit is Ctl), register : Qubit[])'
  types:
  - name: op
    summary: 처음 두 개의 작업에 적용 되는 작업입니다.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Qubit
      - isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: register
    summary: 연산이 적용 되는 처음 두 개의 비트에 대 한 기본 비트 배열입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applytofirsttwoqubits
metadata:
  ms.openlocfilehash: 7cff8317350e0e9d0cd36033d89c3e2d283ec83e
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357394"
