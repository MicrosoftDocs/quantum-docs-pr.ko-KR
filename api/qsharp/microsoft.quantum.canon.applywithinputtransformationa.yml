### YamlMime:QSharpType
uid: microsoft.quantum.canon.applywithinputtransformationa
name: ApplyWithInputTransformationA
type: operation
namespace: microsoft.quantum.canon
summary: 일부 입력을 허용 하는 작업, 해당 작업과 호환 되는 출력을 반환 하는 함수 및이 함수에 대 한 입력을 제공 하는 경우 함수를 사용 하 여 작업에 필요한 형식으로 입력을 변환 하는 작업을 적용 합니다.
examples: >-
  다음 호출에서는를 사용 하 여 @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" 형식의 입력에 대 한 입력 용으로 설계 된 작업을 적용 합니다 @"Microsoft.Quantum.Arithmetic.BigEndian" @"Microsoft.Quantum.Arithmetic.LittleEndian" .


  ```qsharp

  ApplyWithInputTransformation(LittleEndianAsBigEndian, ApplyXorInPlaceBE, LittleEndian(qubits));

  ```
syntax: "operation ApplyWithInputTransformationA (fn : ('U -> 'T), op : ('T => Unit is Adj), input : 'U) : Unit"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Adj), input : 'U)"
  types:
  - name: fn
    summary: 지정 된 입력을 작업에서 예상 하는 형식으로 변환 하는 함수입니다.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: 적용 될 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: input
    summary: 함수에 대 한 입력입니다.
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
seeAlso:
- applywithinputtransformation
- applywithinputtransformationc
- applywithinputtransformationca
- transformedoperation
metadata:
  ms.openlocfilehash: 7f1e978f3766e26d97dace2bfe780ea390f50f80
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91467532"
