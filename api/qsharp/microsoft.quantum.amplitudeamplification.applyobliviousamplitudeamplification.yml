### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.applyobliviousamplitudeamplification
name: ApplyObliviousAmplitudeAmplification
type: operation
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: 부분 반사를 지정 하 여 명확한 진폭 증폭
remarks: >-
  특정 보조 시작 상태 $ \ket{\text{start}}\_에 지정 된 $ 특정 보조 대상 상태 $ \ket{\text{target}}\_a $ 및 모든 시스템 상태 $ \ket{\psi}\_s $는 \begin{align} O\ket {\ text {start}}\_a\ket {\ psi}\_s = \lambda\ket{\text{target}}\_a U \ket{\psi}\_s + \sqrt{1-| \lambda | ^ 2} \ket{\text{target} ^ \perp}\_a\cdots \end{align} for some $U $를 가정 합니다.

  `signalOracle` 및 해당 adjoint의 응용 프로그램에 의해 인터리브 된 보조 레지스터의 시작 및 대상 상태에 대 한 리플렉션 시퀀스를 통해 U 적용의 성공 확률이 변경 될 수 있습니다.


  대부분의 경우 `auxiliaryRegister`는 $ \ket{\text{start}}\_a $ 상태로 초기화 됩니다.
syntax: 'operation ApplyObliviousAmplitudeAmplification (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, auxiliaryRegister : Qubit[], systemRegister : Qubit[]) : Unit'
references: >-
  참조 항목


  - 표준 버전에 대 한 [ *D.W. Berry, A.M. Childs, Cleve, Kothari, R.D. Somma* ](https://arxiv.org/abs/1312.1414) 입니다.
    참조 항목
  - [ *G.H. Low, I.L. Chuang* ](https://arxiv.org/abs/1610.06546) 를 통해 부분 반사를 일반화 합니다.
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, auxiliaryRegister : Qubit[], systemRegister : Qubit[])'
  types:
  - name: phases
    summary: 부분 반사의 단계
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateReflection
    summary: 보조 레지스터의 시작 상태에 대 한 리플렉션 연산자
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: targetStateReflection
    summary: 보조 레지스터의 대상 상태에 대 한 리플렉션 연산자
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: signalOracle
    summary: 보조 및 시스템 레지스터에 공동으로 작동 하는 `ObliviousOracle` 형식의 단일 oracle $O $입니다.
    uid: microsoft.quantum.oracles.obliviousoracle
  - name: auxiliaryRegister
    summary: 보조 레지스터
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: systemRegister
    summary: 시스템 등록
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 3ed252d38ebe32900a7ac22079f46eaf04f2018d
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76872549"
