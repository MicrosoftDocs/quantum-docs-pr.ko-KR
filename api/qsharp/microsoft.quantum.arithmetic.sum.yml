### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.sum
name: Sum
type: operation
namespace: microsoft.quantum.arithmetic
summary: 해독 가능한 sum gate를 구현 합니다. 에서로 인코딩된 전달 비트 `carryIn` 와 및에서 인코딩된 두 개의 summand 비트가 지정 된 경우 `summand1` 는 `summand2` 의 비트 xor를 계산 합니다 `carryIn` `summand1` `summand2` `summand2` .
remarks: '`Carry`작업과 달리이 작업은 실행 비트를 계산 하지 않습니다.'
syntax: 'operation Sum (carryIn : Qubit, summand1 : Qubit, summand2 : Qubit) : Unit'
input:
  content: '(carryIn : Qubit, summand1 : Qubit, summand2 : Qubit)'
  types:
  - name: carryIn
    summary: 운반 비트입니다.
    isPrimitive: true
    uid: Qubit
  - name: summand1
    summary: 첫 번째 summand입니다.
    isPrimitive: true
    uid: Qubit
  - name: summand2
    summary: 두 번째 summand는 및의 합계에서 하위 비트를 대체 합니다 `summand1` `summand2` .
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 076a767177b20b04d029d3512ecf73bc26902824
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352685"
