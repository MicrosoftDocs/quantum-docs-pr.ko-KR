### YamlMime:QSharpType
uid: microsoft.quantum.synthesis.applypermutationusingdecomposition
name: ApplyPermutationUsingDecomposition
type: operation
namespace: microsoft.quantum.synthesis
summary: >-
  분해 기반 합성을 사용 하 여 순열 Permutes 퀀텀 상태에서 amplitudes를 지정 합니다.


  이 절차에서는 분해 기반 합성 방식을 구현 합니다.  입력은 $2 ^ n $ elements $ \{ 0, \pi, 2 ^ n-1 \} $이 고 $n $-변수가 해독 가능한 부울 함수를 나타내는 순열 $ \pi $입니다.

  알고리즘은 각 변수 인덱스에 대해 다음 단계를 반복적으로 수행 합니다 $i $:


  1. $ ((\ Pi_l, \ pi_r), \pi ') $를 계산 하 여 $ \ pi_l $ 및 $ \ pi_r $의 이미지가 $i $ 이외의 인덱스에 있는 요소에서 비트를 변경 하지 않도록 하 고 해당 요소에서 $ \pi의 이미지를 변경 하지 않습니다.

  2. $ \Pi \leftarrow \pi ' $를 설정 하 고 고정 지점이 아닌 요소에 따라 $ \ pi_l $ 및 $ \ pi_r $에서 valtables를 파생 시킵니다.


  모든 변수 인덱스에 대해 이러한 단계를 적용 한 후 나머지 순열 $ \pi $는 id가 되며 수집 된 진위 테이블 및 인덱스에 따라 작업을 사용 하 여 sttable 제어 된 작업을 적용할 수 있습니다 @"microsoft.quantum.intrinsic.x" @"microsoft.quantum.synthesis.applyxcontrolledontruthtable" .


  변수 순서는 $0, \ 점, n-$1입니다.  작업에서 사용자 지정 변수 순서를 지정할 수 있습니다 @"microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder" .
examples: >-
  작업을 합성 하려면 `SWAP` :


  ```Q#

  using (qubits = Qubit[2]) {
    ApplyPermutationUsingDecomposition([0, 2, 1, 3], LittleEndian(qubits));
  }

  ```
syntax: 'operation ApplyPermutationUsingDecomposition (perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: >-
  - [*Alexis De Vos*, *Yvan Van rentergem*, 고급 (2), 2008, pp. 183--200](http://www.aimsciences.org/article/doi/10.3934/amc.2008.2.183)

  - [*Mathias Soeken*, *김 Tague*, *Gerhard*Dueck, *Rolf Drechsler*, 기호화 된 계산 73 (2016), pp. 1--26의 저널](https://www.sciencedirect.com/science/article/pii/S0747717115000188?via%3Dihub)
input:
  content: '(perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: perm
    summary: 0부터 시작 하는 $2 ^ n $ 요소의 순열입니다.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: 순열이 적용 되는 $ 이상 비트 $n 목록입니다.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder
- microsoft.quantum.synthesis.applypermutationusingtransformation
metadata:
  ms.openlocfilehash: 3fd7b84cbf403fe271849ae4d8841a1c8123faa0
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89328086"
