### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.encodeintobitflipcode
name: EncodeIntoBitFlipCode
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: '[3, 1, 3]/⟦ 3, 1, 1 ⟧ 비트 대칭 코드를 인코딩합니다.'
syntax: 'operation EncodeIntoBitFlipCode (physRegister : Qubit[], auxQubits : Qubit[]) : Microsoft.Quantum.ErrorCorrection.LogicalRegister'
input:
  content: '(physRegister : Qubit[], auxQubits : Qubit[])'
  types:
  - name: physRegister
    summary: 보호할 데이터를 나타내는 실제 및 비트의 레지스터입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: auxQubits
    summary: 보호할 데이터를 인코딩하는 데 사용 되는 처음에{00}$ \ket $ 상태에 있는 보조 비트의 레지스터입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Microsoft.Quantum.ErrorCorrection.LogicalRegister
  types:
  - summary: 인코딩에 사용 되는 실제 및 보조 비트 (논리적 레지스터로 나타냄)입니다.
    uid: microsoft.quantum.errorcorrection.logicalregister
seeAlso:
- logicalregister
metadata:
  ms.openlocfilehash: 7a902bc056b9eb39bf12125a1078329f56712ac9
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82685017"
