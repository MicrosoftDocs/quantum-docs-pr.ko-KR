### YamlMime:QSharpType
uid: microsoft.quantum.arrays.foreach
name: ForEach
type: operation
namespace: Microsoft.Quantum.Arrays
summary: 배열의 요소에 대해 정의 된 배열과 작업이 지정 된 경우 작업에서 원래 배열의 이미지로 구성 된 새 배열을 반환 합니다.
remarks: "작업은 제네릭 형식에 대해 정의 됩니다. 즉, 배열 `'T[]` 및 작업이 `action : 'T -> 'U` 있을 때마다 배열의 요소를 매핑하고 형식의 `'U[]`새 배열을 생성할 수 있습니다."
syntax: "operation ForEach (action : ('T => 'U), array : 'T[]) : 'U[]"
input:
  content: "(action : ('T => 'U), array : 'T[])"
  types:
  - name: action
    summary: 각 요소에 `'T` 적용 `'U` 되는에서로의 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
  - name: array
    summary: 에 있는 요소의 배열 `'T`입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'U[]"
  types:
  - summary: 작업에 `'U[]` `action` 의해 매핑되는 요소의 배열입니다.
    isArray: true
    uid: "'U"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: '`array` 요소의 형식입니다.'
- uid: "'U"
  summary: '`action` 작업의 결과 형식입니다.'
metadata:
  ms.openlocfilehash: af4b6b469017e4cee581a9bdd96ef6171d9b1deb
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681031"
