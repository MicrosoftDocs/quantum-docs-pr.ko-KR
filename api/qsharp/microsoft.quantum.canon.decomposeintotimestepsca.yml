### YamlMime:QSharpType
uid: microsoft.quantum.canon.decomposeintotimestepsca
name: DecomposeIntoTimeStepsCA
type: function
namespace: Microsoft.Quantum.Canon
summary: 지정 된 작업에 대해 Trotter – Suzuki 인티그레이터를 구현 하는 작업을 반환 합니다.
syntax: "function DecomposeIntoTimeStepsCA ((nSteps : Int, op : ((Int, Double, 'T) => Unit is Adj + Ctl)), trotterOrder : Int) : ((Double, 'T) => Unit is Adj + Ctl)"
references: >-
  We use the implementation in


  - [ *D. W. Berry, G. Ahokas, R. Cleve, B. C. Sanders* ](https://arxiv.org/abs/quant-ph/0508139)
input:
  content: '((nSteps: Int, op: ((Int, Double, t) = > Unit is Adj + Ctl)), trotterOrder: Int)'
  types:
  - name: n 단계
    isPrimitive: true
    uid: Int
  - name: op
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Int
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: trotterOrder
    summary: >-
      사용할 Trotter – Suzuki 통합자의 순서를 선택 합니다.

      현재 주문 1과 2가 지원 됩니다.
    isPrimitive: true
    uid: Int
output:
  content: ((Double, t) = > Unit is Adj + Ctl)
  types:
  - summary: Trotter – Suzuki 인티그레이터를 구현 하는 단일를 반환 합니다. 여기서 첫 번째 매개 변수 `Double`는 통합 단계 크기이 고, 두 번째 매개 변수는 처리 대상인 대상입니다.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: 각 시간 단계가 작동 해야 하는 형식입니다. 일반적으로 `Qubit[]` 또는 `Qubit`중 하나입니다.
ms.openlocfilehash: 328db9b314320c724cf03adb19ee59d63a33e56e
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/30/2019
ms.locfileid: "73067835"
