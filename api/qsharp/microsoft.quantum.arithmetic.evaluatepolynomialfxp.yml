### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.evaluatepolynomialfxp
name: EvaluatePolynomialFxP
type: operation
namespace: microsoft.quantum.arithmetic
summary: 고정 소수점 표현에서 다항식을 계산 합니다.
syntax: 'operation EvaluatePolynomialFxP (coefficients : Double[], fpx : Microsoft.Quantum.Arithmetic.FixedPoint, result : Microsoft.Quantum.Arithmetic.FixedPoint) : Unit'
input:
  content: '(coefficients : Double[], fpx : Microsoft.Quantum.Arithmetic.FixedPoint, result : Microsoft.Quantum.Arithmetic.FixedPoint)'
  types:
  - name: coefficients
    summary: 이중 배열로 된 다항식의 계수입니다. 즉, 다항식 $P (x) = a_0 + a_1 x + \cdots + a_d x ^ d $의 배열 $ [a_0, a_1, ..., a_d] $입니다.
    isArray: true
    isPrimitive: true
    uid: Double
  - name: fpx
    summary: 다항식을 계산할 입력 고정 소수점 숫자입니다.
    uid: microsoft.quantum.arithmetic.fixedpoint
  - name: result
    summary: $P (x) $를 포함 하는 출력 고정 소수점 숫자입니다. 처음에는 state $ \ket {0} $ 여야 합니다.
    uid: microsoft.quantum.arithmetic.fixedpoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 5a30a25c7e11c2000abeb9ac4613385666c660fb
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89342026"
