### YamlMime:QSharpType
uid: microsoft.quantum.arrays.fold
name: Fold
type: function
namespace: Microsoft.Quantum.Arrays
summary: '`f(f(f(initialState, array[0]), array[1]), ...)`을 반환 하 여 배열 `array`를 통해 `f` 함수를 반복 합니다.'
examples: >-
  ```qsharp

  function Plus(a : Double, b : Double) {
      return a + b;
  }

  function Sum(xs : Double[]) {
      return Fold(Plus, 0.0, xs);
  }

  ```
syntax: "function Fold (folder : (('State, 'T) -> 'State), state : 'State, array : 'T[]) : 'State"
input:
  content: "(folder : (('State, 'T) -> 'State), state : 'State, array : 'T[])"
  types:
  - name: folder
    summary: 배열에 대해 접힌 함수입니다.
    isFunction: true
    input:
      types:
      - uid: "'State"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'State"
        isLocal: true
  - name: state
    summary: 폴더의 초기 상태입니다.
    uid: "'State"
    isLocal: true
  - name: array
    summary: 접을 값의 배열입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'State"
  types:
  - summary: '`array`의 모든 요소를 반복한 후 폴더에서 반환 되는 최종 상태입니다.'
    uid: "'State"
    isLocal: true
typeParameters:
- uid: "'State"
  summary: '`folder` 함수가 작동 하는 상태 유형 (예:)은 첫 번째 인수로 수락 하 고를 반환 합니다.'
- uid: "'T"
  summary: '`array` 요소의 형식입니다.'
ms.openlocfilehash: 4be4752029b10351cfb3fe0fa6aa61b84b157510
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73214353"
