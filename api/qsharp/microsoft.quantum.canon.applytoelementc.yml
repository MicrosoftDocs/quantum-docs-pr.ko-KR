### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoelementc
name: ApplyToElementC
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  배열의 지정 된 요소에 작업을 적용 합니다.


  작업 `op`, 인덱스 `index`, `targets`대상의 배열을 지정 하면 `op(targets[index])`적용 됩니다.
syntax: "operation ApplyToElementC (op : ('T => Unit is Ctl), index : Int, targets : 'T[]) : Unit"
input:
  content: "(op : ('T => Unit is Ctl), index : Int, targets : 'T[])"
  types:
  - name: op
    summary: 적용 될 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: index
    summary: 대상 배열의 인덱스입니다.
    isPrimitive: true
    uid: Int
  - name: targets
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 적용할 작업의 입력 형식입니다.
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applytoelement
- microsoft.quantum.canon.applytoelementa
- microsoft.quantum.canon.applytoelementca
metadata:
  ms.openlocfilehash: d4e8520476218cd5892c98d55dea1b1543d3c58c
  ms.sourcegitcommit: 6ccea4a2006a47569c4e2c2cb37001e132f17476
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 02/28/2020
  ms.locfileid: "77908041"
