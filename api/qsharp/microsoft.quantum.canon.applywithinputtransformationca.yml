### YamlMime:QSharpType
uid: microsoft.quantum.canon.applywithinputtransformationca
name: ApplyWithInputTransformationCA
type: operation
namespace: Microsoft.Quantum.Canon
summary: 일부 입력을 허용 하는 작업, 해당 작업과 호환 되는 출력을 반환 하는 함수 및이 함수에 대 한 입력을 제공 하는 경우 함수를 사용 하 여 작업에 필요한 형식으로 입력을 변환 하는 작업을 적용 합니다.
examples: >-
  다음 호출에서는 @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian"를 사용 하 여 @"Microsoft.Quantum.Arithmetic.LittleEndian"형식의 입력에 @"Microsoft.Quantum.Arithmetic.BigEndian" 입력에 대해 디자인 된 작업을 적용 합니다.


  ```qsharp

  ApplyWithInputTransformation(LittleEndianAsBigEndian, ApplyXorInPlaceBE, LittleEndian(qubits));

  ```
syntax: "operation ApplyWithInputTransformationCA (fn : ('U -> 'T), op : ('T => Unit is Adj + Ctl), input : 'U) : Unit"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Adj + Ctl), input : 'U)"
  types:
  - name: fn
    summary: 지정 된 입력을 작업에서 예상 하는 형식으로 변환 하는 함수입니다.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: 적용 될 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: input
    summary: 함수에 대 한 입력입니다.
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- applywithinputtransformation
- applywithinputtransformationa
- applywithinputtransformationc
- transformedoperation
metadata:
  ms.openlocfilehash: 56033b5a81f87f7d4718f87cfef0fea020297547
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73212602"
