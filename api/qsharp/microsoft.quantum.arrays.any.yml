### YamlMime:QSharpType
uid: microsoft.quantum.arrays.any
name: Any
type: function
namespace: microsoft.quantum.arrays
summary: 배열의 요소에 대해 정의 된 배열과 조건자가 지정 된 경우는 배열의 요소 중 하나 이상이 조건자를 충족 하는지 확인 합니다.
remarks: "함수는 제네릭 형식에 대해 정의 됩니다. 즉, 배열 및 함수가 있을 때마다 `'T[]` `predicate: 'T -> Bool` `Bool` 일부 요소가 충족 되는지 여부를 나타내는 값을 생성할 수 있습니다 `predicate` ."
examples: >-
  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function IsThreePresent() : Bool {
      let arrayOfInts = [1, 2, 3, 4, 5];
      let is3Present = IsNumberPresentInArray(3, arrayOfInts);
      return is3Present;
  }


  function IsNumberPresentInArray(n : Int, array : Int[]) : Bool {
      return Any(EqualI(_, n), array);
  }

  ```
syntax: "function Any (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: 에서 요소를 `'T` `Bool` 확인 하는 데 사용 하는 함수입니다.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: 에 있는 요소의 배열 `'T` 입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: '`Bool`모든 요소에 적용 되는 조건자의 또는 함수 값입니다.'
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: '`array`요소의 형식입니다.'
metadata:
  ms.openlocfilehash: eb61be88ccba6392ca70c75f6c506b9b6c1c8bbd
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352600"
