### YamlMime:QSharpType
uid: microsoft.quantum.simulation.pauliblockencoding
name: PauliBlockEncoding
type: function
namespace: microsoft.quantum.simulation
summary: >-
  Hamiltonian에 대 한 블록 인코딩 단일를 만듭니다.


  Hamiltonian $H = \ sum_ {j} \ alpha_j P_j $는 각각 실제 계수 $ \ $P $를 포함 하는 Pauli 용어 _j alpha_j의 합계로 설명 됩니다.
remarks: 이는 $ \ sum_ {j} \sqrt{\ alpha_j/\alpha}\ket{j} $ 상태를 준비 하 고 준비 하지 않으며 곱셈 제어 된 단일 및을 생성 하 여 얻을 수 <xref:microsoft.quantum.preparation.statepreparationpositivecoefficients> <xref:microsoft.quantum.canon.multiplexoperationsfromgenerator> 있습니다.
syntax: 'function PauliBlockEncoding (generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem) : (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)'
input:
  content: '(generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem)'
  types:
  - name: generatorSystem
    summary: '`GeneratorSystem`$H $를 Pauli 용어의 합계로 설명 하는입니다.'
    uid: microsoft.quantum.simulation.generatorsystem
output:
  content: (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)
  types:
  - summary: >-
      ## <a name="first-parameter"></a>첫 번째 매개 변수


      계수 $ \alpha = \ sum_ {j} | \ alpha_j | $ 인 1-표준을 기반으로 합니다.


      ## <a name="second-parameter"></a>두 번째 매개 변수


      `BlockEncodingReflection`Hamiltonian $H $의 단일 $U $입니다. 이 단일 항목은 $U ^ 2 = I $를 충족 하므로 리플렉션 이기도 합니다.
    types:
    - isPrimitive: true
      uid: Double
    - uid: microsoft.quantum.simulation.blockencodingreflection
metadata:
  ms.openlocfilehash: a7d259a2d09cb26d46976132589ab6693530cb63
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89329718"
