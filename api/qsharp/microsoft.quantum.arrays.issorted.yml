### YamlMime:QSharpType
uid: microsoft.quantum.arrays.issorted
name: IsSorted
type: function
namespace: microsoft.quantum.arrays
summary: 배열이 지정 된 경우 지정 된 비교 함수에 의해 정의 된 대로 배열이 정렬 되는지 여부를 반환 합니다.
remarks: 함수는 `comparison` 전이적으로 간주 됩니다. 예를 들어 및 인 경우에는를로 `comparison(a, b)` `comparison(b, c)` `comparison(a, c)` 가정 합니다. 이 속성이 없으면이 함수의 출력이 올바르지 않을 수 있습니다.
syntax: "function IsSorted (comparison : (('T, 'T) -> Bool), array : 'T[]) : Bool"
input:
  content: "(comparison : (('T, 'T) -> Bool), array : 'T[])"
  types:
  - name: comparison
    summary: '`a`가 이면 보다 작거나 같은 두 요소를 비교 하는 함수입니다 `b` `comparison(a, b)` `true` .'
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: 확인할 배열입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: '`true` 각 요소 쌍에 대해 및이 순서 대로 발생 하는 경우에만 `a` `b` 가입니다 `array` `comparison(a, b)` `true` .'
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: 에 있는 각 요소의 형식입니다 `array` .
metadata:
  ms.openlocfilehash: 4cf457c3f53bd9acdcccf699d3c0047185953c9f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91494183"
