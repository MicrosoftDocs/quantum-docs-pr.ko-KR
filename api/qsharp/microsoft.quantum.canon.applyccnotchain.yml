### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyccnotchain
name: ApplyCCNOTChain
type: operation
namespace: microsoft.quantum.canon
summary: >-
  레지스터 중 하나에 대 한 다음의 비트에서 작동 하는 두 개의 두 비트 레지스터의 해당 비트에서 제어 되는 CCNOT 게이트의 cascade를 구현 합니다.

  두 레지스터의 위치 0에 있는 이상에서 시작 하 여, CCNOT은 대상 레지스터의 위치 1에 있는 나머지 비트에 적용 되 고, 대상 레지스터의 위치 2에 있는 두 번째 위치에 있는 두 번째 위치에 있는 나머지 비트에 의해 제어 `Length(nQubits)-1` 됩니다.
remarks: 대상의 비트 레지스터는 다른 레지스터 보다 하나 이상 커야 합니다.
syntax: 'operation ApplyCCNOTChain (register : Qubit[], targets : Qubit[]) : Unit'
input:
  content: '(register : Qubit[], targets : Qubit[])'
  types:
  - name: register
    summary: 컨트롤에만 사용 되는  bit 레지스터입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: 컨트롤 및 대상으로 사용 되는 및 비트 레지스터입니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 05ea20f0c8fddc1f108301f79908c6e59f8e9ec7
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89350849"
