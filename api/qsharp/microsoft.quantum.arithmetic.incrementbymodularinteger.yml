### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  정수 상수를 기준으로 하는 이상 비트 레지스터의 모듈식 증분을 수행 합니다.


  `increment`$A $, `modulus` $N $ 및 $y $로 인코딩된 정수를 사용 하 여 나타냅니다 `target` .

  그런 다음이 작업은 다음 변환을 수행 합니다. \begin{align} \ket{y} \maps\ket{(y + a) \operatorname{mod} N} \end{align} 정수는 작은 endian 형식으로 인코딩됩니다.
remarks: >-
  Target의 초기 값이 $ $N 보다 작고 증분 $a $가 $N $ 보다 작은 것으로 가정 합니다.

  에서는 <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> 동일한 작업을 기준으로 구현 합니다 `PhaseLittleEndian` .
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: $Y $에 더할 정수 증가값 $a $입니다.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Mods $y + a $의 정수 $N $입니다.
    isPrimitive: true
    uid: Int
  - name: target
    summary: '`LittleEndian` `increment` $A $가에 추가 되는 형식의 정수 $y $입니다.'
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementphasebymodularinteger
metadata:
  ms.openlocfilehash: 7ea6dde359868fe2b5faf78b478df98de091377f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91477134"
