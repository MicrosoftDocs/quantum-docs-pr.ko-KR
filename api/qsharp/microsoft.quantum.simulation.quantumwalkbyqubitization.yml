### YamlMime:QSharpType
uid: microsoft.quantum.simulation.quantumwalkbyqubitization
name: QuantumWalkByQubitization
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  `BlockEncodingReflection`를 퀀텀 탐색으로 변환 합니다.


  즉, 특정 연산자 $H $로 인코딩하는 `BlockEncodingReflection` 단일 $U $ 인 경우 $ \pm e ^ {\pm i\sin ^{-1}(H)} $의 스펙트럼을 포함 하는 퀀텀 탐색 $W $로 변환 합니다.
syntax: 'function QuantumWalkByQubitization (blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
references: >-
  - Hamiltonian Simulation by Qubitization
    Guang Hao Low, Isaac L. Chuang
    https://arxiv.org/abs/1610.06546
input:
  content: '(블록 인코딩: BlockEncodingReflection)'
  types:
  - name: blockEncoding
    uid: microsoft.quantum.simulation.blockencodingreflection
output:
  content: ((추가 비트 [], 고 비트 []) = > Unit is Adj + Ctl)
  types:
  - summary: 퀀텀 탐색 $W $은 `a` `s` 및 $H $에 대해 함께 작동 하며 $ \pm e ^ {\pm i\sin ^{-1}(H)} $의 스펙트럼을 포함 합니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
ms.openlocfilehash: aec6e81e44d4fa09e2ca131f0350590541f4dc8d
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/30/2019
ms.locfileid: "73065353"
