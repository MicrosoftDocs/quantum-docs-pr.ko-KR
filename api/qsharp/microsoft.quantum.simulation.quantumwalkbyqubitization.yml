### YamlMime:QSharpType
uid: microsoft.quantum.simulation.quantumwalkbyqubitization
name: QuantumWalkByQubitization
type: function
namespace: microsoft.quantum.simulation
summary: >-
  블록 인코딩 리플렉션을 퀀텀 탐색으로 변환 합니다.


  특정 연산자를 대상으로 하 `BlockEncodingReflection` 는 일부 $H 연산자를 인코딩하는 단일 $U $로 표시 된는 $ \pm e ^ {\pm i\sin ^ {-1} (H)} $의 스펙트럼을 포함 하는 퀀텀 워크 $W $로 변환 합니다.
syntax: 'function QuantumWalkByQubitization (blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
references: '- Hamiltonian 시뮬레이션의 Guang Jia-hao Low, Isaac Chuang https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection)'
  types:
  - name: blockEncoding
    uid: microsoft.quantum.simulation.blockencodingreflection
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: 퀀텀 탐색 $W $는 레지스터를 공동으로 수행 하 `a` 고 `s` $H $를 차단 하며 $ \pm e ^ {\pm i\sin ^ {-1} (H)} $의 스펙트럼을 포함 합니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: cbe89f5020c50fc653db7d629e618c317d528d94
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89328409"
