### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.allowatmostnqubits
name: AllowAtMostNQubits
type: operation
namespace: microsoft.quantum.diagnostics
summary: 이 작업과 adjoint 호출 사이에는 지정 된 수의 추가 비트 수를 사용 하 여 문을 사용 하 여 할당 합니다.
remarks: 이 작업을 지원 하지 않는 대상에서는이 작업을 수행할 수 없습니다.
examples: >-
  다음 코드 조각은이 진단을 지 원하는 컴퓨터에서 실행 되는 경우 실패 합니다.


  ```Q#

  within {
      AllowAtMostNQubits(3, "Too many qubits allocated.");
  } apply {
      // Fails since this allocates four qubits.
      using (register = Qubit[4]) {
      }
  }

  ```
syntax: 'operation AllowAtMostNQubits (nQubits : Int, message : String) : Unit'
input:
  content: '(nQubits : Int, message : String)'
  types:
  - name: nQubits
    summary: 할당할 수 있는 최대 비트 수입니다.
    isPrimitive: true
    uid: Int
  - name: message
    summary: 실패 시 표시 되는 메시지입니다.
    isPrimitive: true
    uid: String
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
metadata:
  ms.openlocfilehash: 710f24e7b98cf0e3f82c50568ffb36e9732b5837
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89337895"
