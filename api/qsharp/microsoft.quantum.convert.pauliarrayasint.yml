### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: Microsoft.Quantum.Convert
summary: 단일가 나 비트 Pauli 연산자의 배열로 표현 되는 다중 기능 비트 Pauli 연산자를 정수로 인코딩합니다.
remarks: >-
  각 Pauli 연산자는 두 비트를 사용 하 여 인코딩할 수 있습니다. $ $ \begin{align} \boldone \maps00, \쿼드 X \maps01, \쿼드 Y \maps11, \쿼드 Z \maps10.

  \end{align} $ $


  Pauli 연산자의 배열이 `[P0, ..., Pn]`경우이 함수는 빅 endian 순서 `bits(Pn) ... bits(P0)`에서 각 Pauli 연산자의 매핑을 연결 하 여 이진 확장이 형성 된 정수를 반환 합니다.
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: 최대 31 개의 단일 수준 Pauli 연산자의 배열입니다.
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: 아래에 설명 된 대로 `paulis`고유 하 게 식별 하는 정수입니다.
    isPrimitive: true
    uid: Int
ms.openlocfilehash: 0c211075d07147b1c1392fe3f3e4ceb110364bb3
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73230758"
