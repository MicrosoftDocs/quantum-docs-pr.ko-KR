### YamlMime:QSharpType
uid: microsoft.quantum.canon.modularaddproductle
name: ModularAddProductLE
type: operation
namespace: microsoft.quantum.canon
summary: ModularAddProductLE는 더 이상 사용 되지 않습니다. 대신 @"microsoft.quantum.arithmetic.multiplyandaddbymodularinteger"를 사용하십시오.
syntax: 'operation ModularAddProductLE (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, summand : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, summand : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
  - name: multiplier
    uid: microsoft.quantum.arithmetic.littleendian
  - name: summand
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: c379b302654257eba55a19f81998456e3cc25599
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91467124"
