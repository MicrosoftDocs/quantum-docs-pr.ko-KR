### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareentangledstate
name: PrepareEntangledState
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  쌍 2 비트 레지스터입니다.


  즉, 두 개의 레지스터가 지정 된 경우 {1} {2} 각 레지스터가 {00} {11} $ \ket{0\cdots 0} $ 상태에서 시작 되는 것으로 가정 하 여 각 레지스터의 각 \ket 쌍 사이에 최대 entangled 상태 $ \frac {\sqrt} \left (+ \ket \right) $를 준비 합니다.
syntax: 'operation PrepareEntangledState (left : Qubit[], right : Qubit[]) : Unit'
input:
  content: '(left : Qubit[], right : Qubit[])'
  types:
  - name: left
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: right
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 1756ef2c983ea7b0a93e991369bc658ff02b06a9
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89331520"
