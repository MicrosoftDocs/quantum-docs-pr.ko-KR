### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareentangledstate
name: PrepareEntangledState
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  쌍 2 비트 레지스터입니다.


  즉, 두 개의 레지스터가 지정 된 경우 각 레지스터가 $ \ket{0\cdots 0} $ 상태에서{1}시작 되는{2}것으로 가정 하 여{00} 각 레지스터{11} 의 각 \ket 쌍 사이에 최대 entangled 상태 $ \frac {\sqrt} \left (+ \ket \right) $를 준비 합니다.
syntax: 'operation PrepareEntangledState (left : Qubit[], right : Qubit[]) : Unit'
input:
  content: '(left : Qubit[], right : Qubit[])'
  types:
  - name: left
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: right
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: c761362c8793e4e08e7e702b2909f0253b8723d6
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686536"
