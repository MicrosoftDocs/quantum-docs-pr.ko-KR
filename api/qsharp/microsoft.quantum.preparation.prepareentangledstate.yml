### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareentangledstate
name: PrepareEntangledState
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  쌍 2 비트 레지스터입니다.


  즉, 두 개의 레지스터가 지정 된 경우 각 레지스터가 $ \ket{0\에서 시작 되는 것으로 가정 하 여 각 레지스터에서 각 \ket 쌍 사이에 최대{2}{1}entststststst\\ket} \left ({00} +{11} \right) $를 준비 합니다. cdots 0} $ 상태.
syntax: 'operation PrepareEntangledState (left : Qubit[], right : Qubit[]) : Unit'
input:
  content: '(left : Qubit[], right : Qubit[])'
  types:
  - name: left
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: right
    summary: $ \Ket{0\cdots 0} $ 상태의 고 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: 8bbd7a3a87a55a930fda18669f75dc9a98aee981
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73226627"
