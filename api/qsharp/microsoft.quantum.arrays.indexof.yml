### YamlMime:QSharpType
uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: microsoft.quantum.arrays
summary: 배열에서 지정 된 조건자를 만족 하는 첫 번째 요소의 첫 번째 인덱스를 반환 합니다. 이러한 요소가 없는 경우-1을 반환 합니다.
examples: >-
  해당 `IsEven : Int -> Bool` 입력이 이더라도 인 경우에만를 반환 하는 함수 라고 가정 `true` 합니다. 그런 다음와 함께 사용 하 여 `IndexOf` 배열에서 첫 번째 짝수 요소를 찾을 수 있습니다.


  ```Q#

  let items = [1, 3, 17, 2, 21];

  let idx = IndexOf(IsEven, items); // returns 3

  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: 배열의 요소에 대해 작동 하는 조건자 함수입니다.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: 지정 된 조건자를 사용 하 여 검색할 배열입니다.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: True 인 가장 작은 인덱스 이거나 `idx` `predicate(arr[idx])` , 이러한 요소가 없는 경우-1입니다.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 6b0097c4feb41a00f0d9c1fcb4c2b5dbcaa186ef
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352124"
