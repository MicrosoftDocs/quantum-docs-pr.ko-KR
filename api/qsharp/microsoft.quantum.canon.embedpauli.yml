### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: microsoft.quantum.canon
summary: 단일 기능 비트를 지정 하는 경우 해당 인덱스 및 다른 모든 인덱스에서 지정 된 단일 수준 비트 연산자를 사용 하 여 다중 값 비트 Pauli 연산자를 반환 합니다 `PauliI` .
examples: >-
  배열을 가져오려면 다음을 `[PauliI, PauliI, PauliX, PauliI]` 수행 합니다.


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: 지정 된 위치에 배치 되는 단일의 비트 Pauli 연산자입니다.
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: '`output[location] == pauli`이 함수의 출력 인 인덱스입니다 `output` .'
    isPrimitive: true
    uid: Int
  - name: n
    summary: 반환 될 배열의 길이입니다.
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: a5a6dbabfe51f52da9eb63d23bfbf1cf7ee03370
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356374"
