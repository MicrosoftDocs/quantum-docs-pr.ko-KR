### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.squarei
name: SquareI
type: operation
namespace: microsoft.quantum.arithmetic
summary: 에서 정수의 제곱을 계산 하 `xs` 여 `result` 처음에 0 이어야 합니다.
remarks: 표준 시프트 및 추가 방법을 사용 하 여 사각형을 계산 합니다. 일반 승수를 적용 하기 전에 먼저 xs를 복사 하 고 복사 작업을 실행 취소 하는 단순 전방 솔루션과 비교 하 여 $n-$1의 비트를 저장 합니다.
syntax: 'operation SquareI (xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: $n $ bit number to square (LittleEndian)
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: $2n $-bit result (LittleEndian)는 $ \ket $ 상태 여야 합니다 {0} .
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 4b001663d1d4f863d0b597e31bec87c65871ebc1
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352702"
