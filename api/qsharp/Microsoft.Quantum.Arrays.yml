### YamlMime:QSharpNamespace
uid: microsoft.quantum.arrays
name: Microsoft.Quantum.Arrays
functions:
- uid: microsoft.quantum.arrays.all
  summary: 배열의 요소에 대해 정의 된 배열과 조건자가 지정 된 경우 및 배열의 모든 요소가 조건자를 충족 하는지 확인 합니다.
- uid: microsoft.quantum.arrays.any
  summary: 배열의 요소에 대해 정의 된 배열과 조건자가 지정 된 경우는 배열의 요소 중 하나 이상이 조건자를 충족 하는지 확인 합니다.
- uid: microsoft.quantum.arrays.chunks
  summary: 배열을 같은 길이의 여러 요소로 분할 합니다.
- uid: microsoft.quantum.arrays.constantarray
  summary: 모든 요소가 지정 된 값과 같은 지정 된 길이의 배열을 만듭니다.
- uid: microsoft.quantum.arrays.enumerated
  summary: 배열이 지정 된 경우 각 요소의 인덱스와 함께 원래 배열의 요소를 포함 하는 새 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.equala
  summary: 동일한 형식의 두 배열과 배열의 요소 쌍에 대해 정의 된 조건자가 지정 된 경우 배열이 같은지 여부를 확인 합니다.
- uid: microsoft.quantum.arrays.exclude
  summary: 지정 된 인덱스 목록에서 요소를 제외 하 고 다른 배열의 요소를 포함 하는 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.filtered
  summary: 배열의 요소에 대해 정의 된 배열과 조건자가 지정 된 경우 조건자를 충족 하는 요소로 구성 된 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.fold
  summary: 배열을 통해 함수를 반복 `f` `array` 하 여를 반환 `f(f(f(initialState, array[0]), array[1]), ...)` 합니다.
- uid: microsoft.quantum.arrays.head
  summary: 배열의 첫 번째 요소를 반환 합니다.
- uid: microsoft.quantum.arrays.indexof
  summary: 배열에서 지정 된 조건자를 만족 하는 첫 번째 요소의 첫 번째 인덱스를 반환 합니다. 이러한 요소가 없는 경우-1을 반환 합니다.
- uid: microsoft.quantum.arrays.indexrange
  summary: 배열이 지정 된 경우 for 루프에서 사용 하기에 적합 한 해당 배열의 인덱스에 대해 범위를 반환 합니다.
- uid: microsoft.quantum.arrays.isempty
  summary: 배열이 비어 있는 경우에만 true를 반환 합니다.
- uid: microsoft.quantum.arrays.ispermutation
  summary: 지정 된 배열이 순열을 나타내는 경우에만 true를 출력 합니다.
- uid: microsoft.quantum.arrays.lookupfunction
  summary: 배열이 지정 된 경우 해당 배열의 요소를 반환 하는 함수를 반환 합니다.
- uid: microsoft.quantum.arrays.mapped
  summary: 배열의 요소에 대해 정의 된 배열과 함수가 지정 된 경우 함수에서 원래 배열의 이미지로 구성 된 새 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.mappedbyindex
  summary: 배열의 인덱싱된 요소에 대해 정의 된 배열과 함수가 지정 된 경우 함수에서 원래 배열의 이미지로 구성 된 새 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.most
  summary: 마지막 배열 요소가 삭제 된 경우를 제외 하 고 입력 배열과 같은 배열을 만듭니다.
- uid: microsoft.quantum.arrays.padded
  summary: 지정 된 값을 사용 하 여 지정 된 길이까지 채워진 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.partitioned
  summary: 배열을 여러 부분으로 분할 합니다.
- uid: microsoft.quantum.arrays.rest
  summary: 첫 번째 배열 요소가 삭제 된 경우를 제외 하 고 입력 배열과 같은 배열을 만듭니다.
- uid: microsoft.quantum.arrays.reversed
  summary: 입력 배열과 동일한 요소가 포함 된 배열을 역순으로 만듭니다.
- uid: microsoft.quantum.arrays.sequencei
  summary: 지정 된 간격의 정수 배열을 가져옵니다.
- uid: microsoft.quantum.arrays.sequencel
  summary: 지정 된 간격의 정수 배열을 가져옵니다.
- uid: microsoft.quantum.arrays.subarray
  summary: 배열 및 위치 목록을 가져오고, 지정 된 위치와 일치 하는 원래 배열의 요소에서 형성 된 새 배열을 생성 합니다.
- uid: microsoft.quantum.arrays.swapped
  summary: 배열에 두 요소의 교환을 적용 합니다.
- uid: microsoft.quantum.arrays.tail
  summary: 배열의 마지막 요소를 반환합니다.
- uid: microsoft.quantum.arrays.tuplearrayasnestedarray
  summary: 2 튜플의 목록을 중첩 된 배열로 변환 합니다.
- uid: microsoft.quantum.arrays.where
  summary: 조건자와 배열이 지정 된 경우 조건자가 true 인 배열의 인덱스를 반환 합니다.
- uid: microsoft.quantum.arrays.zip
  summary: 두 배열이 지정 된 경우 각 쌍은 각 원래 배열의 요소를 포함 하도록 쌍의 새 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.zip3
  summary: 3 개의 배열이 지정 된 경우 각 3 튜플은 각 원래 배열의 요소를 포함 하도록 3 튜플의 새 배열을 반환 합니다.
- uid: microsoft.quantum.arrays.zip4
  summary: 4 개의 배열이 지정 된 경우 각 4 튜플은 각 원래 배열의 요소를 포함 하도록 4 튜플의 새 배열을 반환 합니다.
summary: " # <a name=\"summary\"></a>요약\n 이 네임 스페이스는 데이터 배열을 만들고 조작 하는 함수를 포함 합니다."
operations:
- uid: microsoft.quantum.arrays.drawmany
  summary: 지정 된 수의 샘플에 대해 작업을 반복 하 여 배열에서 해당 출력을 수집 합니다.
- uid: microsoft.quantum.arrays.foreach
  summary: 배열의 요소에 대해 정의 된 배열과 작업이 지정 된 경우 작업에서 원래 배열의 이미지로 구성 된 새 배열을 반환 합니다.
metadata:
  ms.openlocfilehash: 32aeecb419739a89792bdf1e9761e3821abcf380
  ms.sourcegitcommit: a3775921db1dc5c653c97b8fa8fe2c0ddd5261ff
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 07/02/2020
  ms.locfileid: "85884696"
