### YamlMime:QSharpType
uid: microsoft.quantum.intrinsic.expfrac
name: ExpFrac
type: operation
namespace: microsoft.quantum.intrinsic
summary: >-
  Dyadic 분수로 지정 된 인수를 사용 하 여 다중 기능 비트 Pauli 연산자의 지 수를 적용 합니다.


  \begin{align} e ^ {i \pi k [P_0 \otime P_1 \coP_ {N-1}]/2 ^ N}, \end{align} where $P _i $은의 $i $ th 요소 `paulis` 이며 where $N = $입니다 `Length(paulis)` .
syntax: 'operation ExpFrac (paulis : Pauli[], numerator : Int, power : Int, qubits : Qubit[]) : Unit'
input:
  content: '(paulis : Pauli[], numerator : Int, power : Int, qubits : Qubit[])'
  types:
  - name: paulis
    summary: 각 텐서에 대 한 제품 요소를 나타내는 단일 값의 배열입니다.
    isArray: true
    isPrimitive: true
    uid: Pauli
  - name: numerator
    summary: Dyadic 분수를 회전 하는 각도를 나타내는 분자 ($k $)입니다.
    isPrimitive: true
    uid: Int
  - name: power
    summary: 제곱 비트 레지스터를 회전할 각도의 분모를 지정 하는 두 ($n $)의 제곱입니다.
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: 지정 된 회전을에 적용 하려면 등록 합니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 9873cc2a15cb458baba9c6984c050974ad4b17d4
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89347058"
