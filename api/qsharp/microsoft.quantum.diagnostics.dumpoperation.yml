### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.dumpoperation
name: DumpOperation
type: operation
namespace: microsoft.quantum.diagnostics
summary: 작업을 수행 하는 경우 현재 실행 대상에서 사용할 수 있는 작업에 대 한 진단을 표시 합니다.
remarks: >-
  이 작업을 호출 하면 Q # 내에서 관찰할 영향을 주지 않습니다. 표시 되는 정확한 진단 (있는 경우)은 현재 실행 대상 및 편집기 환경에 따라 달라 집니다.

  예를 들어 전체 상태 퀀텀 시뮬레이터에서 사용 되는 경우를 나타내는 데 사용 되는 단일 매트릭스가 `op` 표시 됩니다.


  전역 단계 모호성을 허용 하는 시뮬레이터에서 실행 하는 경우 (예: 전체 상태 시뮬레이터) 반환 된 표현은 글로벌 단계까지 달라질 수 있습니다.


  마찬가지로 행 및 열 행렬 표현의 순서 지정은이 작업을 지 원하는 각 시뮬레이터에서 사용 되는 규칙에 따라 달라질 수 있습니다.
examples: >-
  퀀텀 시뮬레이터 대상에서 실행 하는 경우 다음 코드 조각은 matrix $ $ \begin{aligned} \left (\begin{matrix} 1 & 0 & 0 & 0 \\ \\ 0 & 0 & 0 & 1 \\ \\ 0 & 0 & 1 & 0 0 & 1 & 0 & 0 \\ \\ \end{matrix}\right) \end{aligned}.를 출력 합니다.

  $$


  ```Q#

  operation DumpCnot() : Unit {
      DumpOperation(2, ApplyToFirstTwoQubitsCA(CNOT, _));
  }

  ```
syntax: 'operation DumpOperation (nQubits : Int, op : (Qubit[] => Unit is Adj)) : Unit'
input:
  content: '(nQubits : Int, op : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: 지정 된 작업이 작동 하는 값의 수입니다.
    isPrimitive: true
    uid: Int
  - name: op
    summary: 진단할 작업입니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: c9005373fb2be7bbfcd19870fa741cf4b0d8d754
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89337351"
