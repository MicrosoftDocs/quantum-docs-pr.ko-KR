### YamlMime:QSharpType
uid: microsoft.quantum.canon.boundca
name: BoundCA
type: function
namespace: Microsoft.Quantum.Canon
summary: >-
  단일 입력에 대해 작동 하는 작업 배열이 지정 된 경우 지정 된 각 작업을 순서 대로 수행 하는 새 작업을 생성 합니다.

  한정자 `CA`는 배열의 모든 작업이 adjointable 및 제어 가능 함을 나타냅니다.
examples: >-
  다음은 동일 합니다.


  ```qsharp

  let bound = BoundCA([U, V]);

  bound(x);

  ```


  및


  ```qsharp

  U(x); V(x);

  ```
syntax: "function BoundCA (operations : ('T => Unit is Adj + Ctl)[]) : ('T => Unit is Adj + Ctl)"
input:
  content: "(operations : ('T => Unit is Adj + Ctl)[])"
  types:
  - name: operations
    summary: 지정 된 입력에 대해 수행할 일련의 작업입니다.
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ('T => Unit is Adj + Ctl)
  types:
  - summary: 지정 된 각 작업을 입력에 대해 순서 대로 수행 하는 새 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: 배열의 각 작업이 작동 하는 대상입니다.
seeAlso:
- microsoft.quantum.canon.bound
ms.openlocfilehash: 42e32f28e7c91ade9ff00196f7d9fac29c5c48e4
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73225420"
