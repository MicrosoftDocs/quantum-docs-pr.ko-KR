### YamlMime:QSharpType
uid: microsoft.quantum.characterization.estimatefrequency
name: EstimateFrequency
type: operation
namespace: Microsoft.Quantum.Characterization
summary: 준비 및 측정을 고려 하 여 지정 된 수의 평가판을 수행 하 여 `Zero`측정값이 성공 (반환) 하는 빈도를 추정 합니다.
syntax: 'operation EstimateFrequency (preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int) : Double'
input:
  content: '(preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int)'
  types:
  - name: preparation
    summary: 지정 된 상태 $ \rho $를 해당 입력 레지스터에 준비 하는 작업을 $ $P 합니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: measurement
    summary: 작업 $M $는 관심 측정을 나타냅니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Result
  - name: nQubits
    summary: 각 작업의 준비 및 측정값이 작동 하는 데 사용할 수 있는 값입니다.
    isPrimitive: true
    uid: Int
  - name: nMeasurements
    summary: 관련 빈도를 예측 하기 위해 측정이 수행 되어야 하는 횟수입니다.
    isPrimitive: true
    uid: Int
output:
  content: Double
  types:
  - summary: >-
      $M (P (\ket{00 \cdots 0} \bra{00 \cdots 0})) `Zero`$가 반환 되 고, 비편향 이항 평가기 $ \hat{p} = n\_{\uparrow}/n\_{\text{measurements}} $를 사용 하 여 얻은 빈도의 예상 $ \hat{p} $입니다.\_여기서 $n {\uparrow} $은 관찰 `Zero` 된 결과의 수입니다.


      이는 확률을 측정할 수 없다는 점에서 물리적인 제한을 적용 하는 대상 컴퓨터에서 특히 중요 합니다.
    isPrimitive: true
    uid: Double
metadata:
  ms.openlocfilehash: 973ab328d11410fee400659f18a99d50c1883156
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82677743"
