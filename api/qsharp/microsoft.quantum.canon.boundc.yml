### YamlMime:QSharpType
uid: microsoft.quantum.canon.boundc
name: BoundC
type: function
namespace: Microsoft.Quantum.Canon
summary: >-
  단일 입력에 대해 작동 하는 작업 배열이 지정 된 경우 지정 된 각 작업을 순서 대로 수행 하는 새 작업을 생성 합니다.

  한정자 `C`는 배열의 모든 작업이 제어 가능 함을 나타냅니다.
examples: >-
  The following are equivalent:


  ```qsharp

  let bound = BoundC([U, V]);

  bound(x);

  ```


  and


  ```qsharp

  U(x); V(x);

  ```
syntax: "function BoundC (operations : ('T => Unit is Ctl)[]) : ('T => Unit is Ctl)"
input:
  content: "(작업: (' t = > 단위는 Ctl) [])"
  types:
  - name: 작업
    summary: 지정 된 입력에 대해 수행할 일련의 작업입니다.
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
output:
  content: (' T = > 단위는 Ctl)
  types:
  - summary: 지정 된 각 작업을 입력에 대해 순서 대로 수행 하는 새 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
typeParameters:
- uid: "'T"
  summary: 배열의 각 작업이 작동 하는 대상입니다.
seeAlso:
- microsoft.quantum.canon.bound
ms.openlocfilehash: 46a82065b3a236ad0e0a02894d6b1b3e2a1ceba1
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/30/2019
ms.locfileid: "73068175"
