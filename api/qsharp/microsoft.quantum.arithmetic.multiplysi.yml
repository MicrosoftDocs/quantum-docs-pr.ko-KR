### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: microsoft.quantum.arithmetic
summary: 부호 있는 정수를 부호 있는 정수로 곱하고 `xs` `ys` 처음에 0 이어야 하는에 결과를 저장 합니다 `result` .
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: n 비트 multiplicand (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: n 비트 승수 (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: 2n-bit result (SignedLittleEndian)는 $ \ket $ 상태 여야 합니다 {0} .
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: e81995b6dfb20ddd3e3e3139831d3cc43bfd60da
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89353399"
