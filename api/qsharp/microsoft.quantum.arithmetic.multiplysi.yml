### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: 부호 있는 정수 `xs` 부호 있는 정수 `ys` 곱하여 결과를 `result`에 저장 합니다 .이 값은 처음에 0 이어야 합니다.
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: n 비트 multiplicand (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: n 비트 승수 (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: 2n 비트 결과 (SignedLittleEndian)는 $ \ket{0}$ 초기 상태 여야 합니다.
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 154e870416e47547a115fcc5533d187b3ed67213
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73214812"
