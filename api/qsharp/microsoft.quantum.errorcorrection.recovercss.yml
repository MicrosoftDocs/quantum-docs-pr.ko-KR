### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.recovercss
name: RecoverCSS
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: '`CSS` 형식으로 설명 되는 퀀텀 코드에의 한 오류 수정 사항을 한 번 수행 합니다.'
syntax: 'operation RecoverCSS (code : Microsoft.Quantum.ErrorCorrection.CSS, fnX : Microsoft.Quantum.ErrorCorrection.RecoveryFn, fnZ : Microsoft.Quantum.ErrorCorrection.RecoveryFn, logicalRegister : Microsoft.Quantum.ErrorCorrection.LogicalRegister) : Unit'
input:
  content: '(code : Microsoft.Quantum.ErrorCorrection.CSS, fnX : Microsoft.Quantum.ErrorCorrection.RecoveryFn, fnZ : Microsoft.Quantum.ErrorCorrection.RecoveryFn, logicalRegister : Microsoft.Quantum.ErrorCorrection.LogicalRegister)'
  types:
  - name: code
    summary: 퀀텀 CSS 오류-`CSS` 형식으로 패키지 된 코드를 수정 하 여 퀀텀 데이터의 인코딩과 디코딩을 설명 하 고 오류 syndromes을 측정 하는 방법을 설명 합니다.
    uid: microsoft.quantum.errorcorrection.css
  - name: fnX
    summary: 각 $X $ error 증후군를 검색 된 오류를 해결 하는 `Pauli[]` 작업에 매핑하는 `RecoveryFn`입니다.
    uid: microsoft.quantum.errorcorrection.recoveryfn
  - name: fnZ
    summary: 각 $Z $ error 증후군를 검색 된 오류를 해결 하는 `Pauli[]` 작업에 매핑하는 `RecoveryFn`입니다.
    uid: microsoft.quantum.errorcorrection.recoveryfn
  - name: logicalRegister
    summary: 안정기 코드가 정의 된 요소의 배열입니다.
    uid: microsoft.quantum.errorcorrection.logicalregister
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.canon.css
- microsoft.quantum.canon.recoveryfn
- microsoft.quantum.canon.logicalregister
ms.openlocfilehash: 4e07e66816c347aa9a7e1f06ebe88f65b2d040ce
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73220269"
