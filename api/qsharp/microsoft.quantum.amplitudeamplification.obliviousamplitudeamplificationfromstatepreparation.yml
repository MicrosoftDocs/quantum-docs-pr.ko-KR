### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
name: ObliviousAmplitudeAmplificationFromStatePreparation
type: function
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: 부분 반사에 대해 oracles 명확한 진폭 증폭
remarks: >-
  이렇게 하면 `AmpAmpObliviousByReflectionPhases`에 비해 보조 시작 및 대상 상태의 형태에 보다 엄격한 조건이 부과 됩니다.

  $A \ket{0}\_f\ket{0}\_A = \ket{\text{start}}\_{fa} $는 계산 기준 $ \ket\_{0}f\ket \_$에서 보조 시작 상태 $ \ket{\text{start}}{0}{fa} $를 준비 하는 것으로 가정 합니다.

  대상 상태가 $ \ket{1}\_f $로 표시 되어 있다고 가정 합니다.

  \Begin{align} O\ket {\ text {start}}\_{fa} \ket{\psi}\_s = \lambda\ket{1}\_f\ket {\ text {a\ket}}\_\ket{\psi} {\ text {target}}\_s U \sqrt{1-\_s + \ket | \lambda | ^ 2} \end{align}{0}\_f\cdots,의 일부 단일 $U $로 가정 합니다.
syntax: 'function ObliviousAmplitudeAmplificationFromStatePreparation (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int)'
  types:
  - name: phases
    summary: 부분 반사의 단계
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateOracle
    summary: 보조 시작 상태를 준비 하는 단일 oracle $A $
    uid: microsoft.quantum.oracles.deterministicstateoracle
  - name: signalOracle
    summary: 보조 및 시스템 레지스터에 공동으로 작동 하는 `ObliviousOracle` 형식의 단일 oracle $O $
    uid: microsoft.quantum.oracles.obliviousoracle
  - name: idxFlagQubit
    summary: 단일 수준 비트 플래그 레지스터의 인덱스입니다.
    isPrimitive: true
    uid: Int
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: 부분 반사를 기준으로 명확한 진폭 증폭을 구현 하는 작업입니다.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: fa44068c55a1bb92f8827095889f9c3b4d6f1011
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76872447"
