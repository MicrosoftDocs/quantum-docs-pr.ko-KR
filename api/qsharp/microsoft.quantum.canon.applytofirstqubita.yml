### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytofirstqubita
name: ApplyToFirstQubitA
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  레지스터의 첫 번째 비트에 작업을 적용 합니다.

  한정자 `A` 작업이 adjointable 나타냅니다.
syntax: 'operation ApplyToFirstQubitA (op : (Qubit => Unit is Adj), register : Qubit[]) : Unit'
input:
  content: '(op : (Qubit => Unit is Adj), register : Qubit[])'
  types:
  - name: op
    summary: 첫 번째 비트에 적용 되는 연산입니다.
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: register
    summary: 연산이 적용 되는 첫 번째 작업에 대 한 기본 비트 배열
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
seeAlso:
- microsoft.quantum.canon.applytofirstqubit
metadata:
  ms.openlocfilehash: 21246e0f9c9d27609107ad27c341851a15af5ede
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73213486"
