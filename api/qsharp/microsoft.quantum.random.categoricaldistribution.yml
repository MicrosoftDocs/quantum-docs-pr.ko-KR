### YamlMime:QSharpType
uid: microsoft.quantum.random.categoricaldistribution
name: CategoricalDistribution
type: function
namespace: microsoft.quantum.random
summary: 지정 된 결과의 각 한정 된 목록에 대 한 확률이 명시적으로 지정 된 불연속 범주 분포를 반환 합니다.
examples: >-
  다음 Q # 코드는 확률은 30%이 고 1은 확률 70% 인 경우 0을 표시 합니다.


  ```Q#

  let dist = CategoricalDistribution([0.3, 0.7]);

  Message($"Got sample: {dist::Sample()}");

  ```
syntax: 'function CategoricalDistribution (probs : Double[]) : Microsoft.Quantum.Random.DiscreteDistribution'
input:
  content: '(probs : Double[])'
  types:
  - name: probs
    summary: >-
      범주 분포의 각 결과에 대 한 확률입니다.

      이러한 확률은 정규화 되지 않을 수 있지만 모두 음수가 아니어야 합니다.
    isArray: true
    isPrimitive: true
    uid: Double
output:
  content: Microsoft.Quantum.Random.DiscreteDistribution
  types:
  - summary: 확률을 포함 하는 인덱스입니다 `i` `probs[i] / sum` `sum` . 여기서는에 지정 된의 합계입니다 `probs` `Fold(PlusD, 0.0, probs)` .
    uid: microsoft.quantum.random.discretedistribution
metadata:
  ms.openlocfilehash: a298d84d177c15d67d9d1ec24c8f6a9c11f1cd8b
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89331112"
