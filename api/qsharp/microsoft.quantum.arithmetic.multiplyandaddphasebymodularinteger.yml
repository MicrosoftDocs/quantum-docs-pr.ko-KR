### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: MultiplyAndAddByModularInteger와 동일 하지만 summand가 QFT로 정수를 인코딩하는 것으로 가정 합니다.
remarks: >-
  에 `phaseSummand` 가장 높은 비트가 0으로 설정 된 것으로 가정 합니다.

  또한은 값 `phaseSummand` 이 $ $N 미만 이라고 가정 합니다.
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: 와 관련 하 여 더하기 및 곱하기를 수행 하는 모듈러스 $N $입니다.
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: 값이의 각 기본 상태 레이블에 추가 될 부호 없는 정수를 나타내는 퀀텀 레지스터입니다 `summand` .
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: 이 작업의 대상으로 사용할 부호 없는 정수를 나타내는 퀀텀 레지스터입니다.
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: fea0d8913537f70af572a748dfba6a7a171750f8
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91476763"
