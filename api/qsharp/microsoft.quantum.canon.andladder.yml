### YamlMime:QSharpType
uid: microsoft.quantum.canon.andladder
name: AndLadder
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  대상 성능에서 제어 되는 ' 및 사다리 '를 수행 합니다.


  이는 계산 기준 벡터에 지정 된 단일를 적용 합니다. $ $ \begin{align} \ket{x\_1, \stix\_n} \ket{y\_1, \dots, y\_{n-1}} \maps\ket{x\_1 , \dots, x\_n} \ket{y\_1 \oplus (x\_1 \stx\_2), \stiiarx\_{n-1} \oplus (x\_1 \stx\_, \end{align} $ $ where $ \ket{x\_1, \dots, x\_n} $는 `controls`의 계산 기준 상태를 나타내며, 여기서 $ \ket{y\_1, \stay\_{n-1}} $는 `targets`의 계산 기준 상태를 나타냅니다.
remarks: >-
  - <xref:microsoft.quantum.canon.applymulticontrolledc> 및 <xref:microsoft.quantum.canon.applymulticontrolledca>의 일부로 사용 됩니다.

  - 설명 및 회로 다이어그램의 경우 그림 4.10, Nielsen & Chuang의 섹션 4.3을 참조 하세요.
syntax: 'operation AndLadder (ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[]) : Unit'
references: '- [*Michael Nielsen, Isaac Chuang*, 퀀텀 계산 및 퀀텀 정보](http://doi.org/10.1017/CBO9780511976667)'
input:
  content: '(ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[])'
  types:
  - name: ccnot
    summary: 생성에 사용할 CCNOT gate입니다.
    uid: microsoft.quantum.canon.ccnotop
  - name: controls
    summary: >-
      및 사다리의 컨트롤로 사용할 비트의 레지스터입니다.

      이 작업은 `controls` 고정의 계산 기준 상태를 유지 합니다.

      `controls` 길이는 2 이상 이어야 하 고 1과 `targets`의 길이와 같아야 합니다.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: '`targets` 길이는 1 이상 이어야 하 고 `controls`의 길이에서 1을 뺀 값과 같아야 합니다.'
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
ms.openlocfilehash: 2970f9c783ea233f2f1ceb4089802320efe82602
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ko-KR
ms.lasthandoff: 10/31/2019
ms.locfileid: "73217719"
