### YamlMime:QSharpType
uid: microsoft.quantum.canon.controlledonbitstring
name: ControlledOnBitString
type: function
namespace: microsoft.quantum.canon
summary: >-
  컨트롤 레지스터 상태가 지정 된 비트 마스크에 해당 하는 경우 대상 레지스터에 oracle을 적용 하는 단일 작업을 반환 합니다.


  이 함수의 출력은 \begin{align} U \ket{b_0 b_1 \cdots b_ {n-1}} \ket{\psi} = \ket{b_0 b_1 \cdots b_ {n-1}}와 같이 단일 변환 $U $로 나타낼 수 있는 작업입니다. \cdots \begin{cases} V \ket{\psi} & \t extrm{if} (b_0 b_1 \cdots b_ {n-1}) = \texttt{bits} \\ \\ \ket{\psi} & \textrm{otherwise} \end{cases}, \end{align} where $V $은 작업 동작을 나타내는 단일 변환입니다 `oracle` .
remarks: >-
  에 지정 된 패턴은 `bits` 보다 짧을 수 있습니다 `controlRegister` .이 경우 추가 컨트롤의 비트는 무시 됩니다. 즉, $ \ket {0} $ 또는 $ \ket $에서 제어 되지 않습니다 {1} .

  `bits`가 보다 길면 `controlRegister` 오류가 발생 합니다.


  부울 배열과 `bits` 단일 연산이 제공 되는 경우 `oracle` 이 함수의 출력은 다음 단계를 수행 하는 작업입니다.


  * `X`의 요소에 해당 하는 컨트롤 레지스터의 각 요소에 작업을 적용 `false` 합니다 `bits` .

  * `Controlled oracle`컨트롤 및 대상 레지스터에 적용 됩니다.

  * `X`의 요소에 해당 하는 컨트롤 레지스터의 각 요소에 작업을 적용 하 여 `false` `bits` 컨트롤을 원래 상태로 되돌립니다.


  함수 출력은 `Controlled` `ControlledOnBitString` `bits` 가와 같은 특수 한 경우입니다 `[true, ..., true]` .
examples: >-
  다음 코드 조각은 동일 합니다.


  ```qsharp

  (ControlledOnBitString(bits, oracle))(controlRegister, targetRegister);

  ```


  및


  ```qsharp

  within {
      ApplyPauliFromBitString(PauliX, false, bits, controlRegister);
  } apply {
      Controlled oracle(controlRegister, targetRegister);
  }

  ```


  다음 코드는 $ \frac {1} {2} (\ket {00} -\ket {01} + \ket {10} + \ket {11} ) $ 상태를 준비 합니다.


  ```qsharp

  using (register = Qubit[2]) {
      ApplyToEach(H, register);
      (ControlledOnBitString([false], Z))(register[0..0], register[1]);
  }

  ```
syntax: "function ControlledOnBitString (bits : Bool[], oracle : ('T => Unit is Adj + Ctl)) : ((Qubit[], 'T) => Unit is Adj + Ctl)"
input:
  content: "(bits : Bool[], oracle : ('T => Unit is Adj + Ctl))"
  types:
  - name: bits
    summary: 지정 된 단일 작업을 제어 하는 비트 문자열입니다.
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: oracle
    summary: 대상 레지스터에 적용 될 단일 작업입니다.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ((Qubit[], 'T) => Unit is Adj + Ctl)
  types:
  - summary: '`oracle`컨트롤 레지스터 상태가 비트 마스크에 해당 하는 경우 대상 레지스터에 적용 되는 단일 작업입니다 `bits` .'
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 3064af5cc25b8d5a63f57d62803b8484d2f93d2c
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356646"
